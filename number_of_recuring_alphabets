mydict={"key":"value"}
mydict.clear() #to create a empty dictionary
mydict_1={"key":"value"}
mydict_1.clear()
def string_changes(string_1):
    a=string_1.lower()         # converts every alphabet entered by user into lower case
    n=len(string_1)            # n stores the length of the string 
    for i in range(0,n):       # loop to go from frist element to the last element
        count=0                # makes count = 0 everytime before moving the next element
        for j in range(i,n):   # in this loop we check for same alphabets starting from present value of a[i] to n
            if(a[i]==a[j]):    # checks if the element is present anywhere else as j moves from i to 
                count=count+1  # increases count when same character is encountered
                
        if (a[i] not in mydict.keys()): # checks if the character is already present in the dictionary
            mydict[a[i]]=count          # if the character is not present in dictionary then the characters gets added along with is count
                 
        
def most_frequent(dic):
    m=0
    for i in mydict.values():
        m=m+1
    

    list_1=[]
    list_1=list(dic.items()) #converts the dictionary into a list 
    temp=[("o",0)] #creates a temperaroy list 
    for i in range(0,m-1):
        for j in range(i+1,m):   # this loops are used to swap the values of the list
            if(list_1[i][1] < list_1[j][1]):
                temp=list_1[i]
                list_1[i]=list_1[j]
                list_1[j]=temp

    print("OUTPUT")
    for i in range(0,m):
        print(list_1[i][0]," = ",list_1[i][1])

user_string=str(input("Enter a string "))
print("user entered string is ",user_string)
string_changes(user_string)
most_frequent(mydict)
